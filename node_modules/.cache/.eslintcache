[{"/home/ankitpathak/Desktop/ankitCODE/webdev/cart/cart/CartPage/src/index.js":"1","/home/ankitpathak/Desktop/ankitCODE/webdev/cart/cart/CartPage/src/App.js":"2","/home/ankitpathak/Desktop/ankitCODE/webdev/cart/cart/CartPage/src/CartItem.js":"3","/home/ankitpathak/Desktop/ankitCODE/webdev/cart/cart/CartPage/src/Cart.js":"4","/home/ankitpathak/Desktop/ankitCODE/webdev/cart/cart/CartPage/src/Navbar.js":"5"},{"size":963,"mtime":1676578356431,"results":"6","hashOfConfig":"7"},{"size":2756,"mtime":1676578570156,"results":"8","hashOfConfig":"7"},{"size":3258,"mtime":1676387061569,"results":"9","hashOfConfig":"7"},{"size":686,"mtime":1676385994651,"results":"10","hashOfConfig":"7"},{"size":908,"mtime":1676386363900,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17v342",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/ankitpathak/Desktop/ankitCODE/webdev/cart/cart/CartPage/src/index.js",["29"],[],"/home/ankitpathak/Desktop/ankitCODE/webdev/cart/cart/CartPage/src/App.js",["30","31"],[],"/home/ankitpathak/Desktop/ankitCODE/webdev/cart/cart/CartPage/src/CartItem.js",["32"],[],"import React from 'react'\n// import index from './index.css'\n\n// no this keyword in function based component only\nconst CartItem = (props) =>{\n    // constructor() {\n    //     super();\n    //     this.state = {\n    //         price: 99,\n    //         title: 'Mobile',\n    //         qty: 1,\n    //         img: ''\n    //     }\n    // }\n    // increaseQuantity=()=>\n    // {\n        // console.log(\"this.state\", this.state);\n        // this.state.qty=this.state.qty+1;\n        // console.log(this.state.qty)\n\n\n\n        // when new state is defined\n        // this.setState({\n        //     qty:this.state.qty+1 \n        // });\n\n\n        // when prevstate is being used to update \n        // this.setState(\n        //     (prevState)=>{\n        //         return{\n        //             qty:prevState.qty+1\n        //         }\n        //     },()=>{console.log(\"this.state\", this.state);}\n        // );\n        //callback func becoz setstate is asnychronous \n    // }\n    // decreaseQuantity=()=>\n    // {\n        // console.log(\"this.state\", this.state);\n        // this.state.qty=this.state.qty+1;\n        // console.log(this.state.qty)\n        // if(this.state.qty-1>=0)\n        // {\n        //     this.setState({\n        //     qty:this.state.qty-1 \n        // });\n        // }\n        \n    // }\n    // render() {\n        const { price, title, qty ,img} = props.product; // object destructuring\n        // console.log('this.props',this.props);\n        return (\n            <div className='cart-item'>\n                <div className='left-block'>\n                    <img style={styles.image} src={img}/>\n                </div>\n                <div className='right-block'>\n\n                    {/* <div style={  {fontSize:25,color:'black'}}> {this.state.title}</div> */}\n                    <div style={{ fontSize: 25, color: 'black' }}>  {title}</div>\n                    <div style={{ fontSize: 20, color: '#555' }}>  Rs {price}</div>\n                    <div style={{ fontSize: 18, color: '#555' }}>  Qty: {qty}</div>\n                    <div className='cart-item-actions'>\n                        <img \n                        alt='Increase' \n                        className='action-icons' \n                        src=\"https://cdn-icons-png.flaticon.com/512/992/992651.png\" \n                        onClick={()=>{props.OnIncreaseQuantity(props.product)}}\n                        />\n                        <img \n                        alt='Decrease' \n                        className='action-icons' \n                        src=\"https://cdn-icons-png.flaticon.com/512/66/66889.png\" \n                        onClick={()=>{props.OnDecreaseQuantity(props.product)}}\n                        />\n                        <img \n                        alt='Delete' \n                        className='action-icons' \n                        src=\"https://cdn-icons-png.flaticon.com/512/3405/3405244.png\" \n                        onClick={()=>{props.OneDeleteItem(props.product)}}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    // }\n}\nconst styles = {\n    image: {\n        height: 150,\n        width: 110,\n        borderRadius: 4,\n        background: '#ccc'\n    }\n}\nexport default CartItem;",[],"/home/ankitpathak/Desktop/ankitCODE/webdev/cart/cart/CartPage/src/Cart.js",[],[],"/home/ankitpathak/Desktop/ankitCODE/webdev/cart/cart/CartPage/src/Navbar.js",[],[],{"ruleId":"33","severity":1,"message":"34","line":23,"column":9,"nodeType":"35","messageId":"36","endLine":23,"endColumn":12},{"ruleId":"37","severity":1,"message":"38","line":59,"column":28,"nodeType":"39","messageId":"40","endLine":59,"endColumn":30},{"ruleId":"37","severity":1,"message":"38","line":67,"column":28,"nodeType":"39","messageId":"40","endLine":67,"endColumn":30},{"ruleId":"41","severity":1,"message":"42","line":58,"column":21,"nodeType":"43","endLine":58,"endColumn":58},"no-unused-vars","'app' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]