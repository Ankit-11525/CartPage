[{"/home/ankitpathak/Desktop/ankitCODE/webdev/cart/CartPage/src/index.js":"1","/home/ankitpathak/Desktop/ankitCODE/webdev/cart/CartPage/src/App.js":"2","/home/ankitpathak/Desktop/ankitCODE/webdev/cart/CartPage/src/Navbar.js":"3","/home/ankitpathak/Desktop/ankitCODE/webdev/cart/CartPage/src/Cart.js":"4","/home/ankitpathak/Desktop/ankitCODE/webdev/cart/CartPage/src/CartItem.js":"5"},{"size":254,"mtime":1676796042031,"results":"6","hashOfConfig":"7"},{"size":5424,"mtime":1676901062231,"results":"8","hashOfConfig":"7"},{"size":908,"mtime":1676796042031,"results":"9","hashOfConfig":"7"},{"size":686,"mtime":1676796042031,"results":"10","hashOfConfig":"7"},{"size":3258,"mtime":1676796042031,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13lc1ht",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/ankitpathak/Desktop/ankitCODE/webdev/cart/CartPage/src/index.js",[],[],"/home/ankitpathak/Desktop/ankitCODE/webdev/cart/CartPage/src/App.js",["29","30","31","32"],[],"import React from 'react';\nimport Cart from './Cart';\nimport Navbar from './Navbar';\nimport { updateDoc,deleteDoc, addDoc, getFirestore, doc, onSnapshot, collection, Firestore } from \"firebase/firestore\";\n/// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBUvUO8r7bKr1cXY8TIFmXzZIpFZd1opdo\",\n  authDomain: \"cart-ede06.firebaseapp.com\",\n  projectId: \"cart-ede06\",\n  storageBucket: \"cart-ede06.appspot.com\",\n  messagingSenderId: \"190337897842\",\n  appId: \"1:190337897842:web:31a0a74c264a33e77639eb\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n      loading: true\n    }\n  }\n  componentDidMount() {\n    // const db = getFirestore(); \n    // const colRef = collection(db, 'products');\n    // const docsSnap = getDocs(colRef);\n    // docsSnap.then((ankit) => {\n\n    //   // console.log(ankit);\n    //   const products = ankit.docs.map((doc) => {\n    //     const data = doc.data();\n    //     // to provide key\n    //     data['id'] = doc.id;\n    //     return data;\n    //   })\n    //   // console.log(products);\n    //   this.setState({\n    //     products,\n    //     loading: false\n    //   })\n    // })\n\n\n\n\n    // realtime update .............\n    const db = getFirestore();\n    const colRef = collection(db, 'products');\n    onSnapshot(colRef, (ankit) => {\n\n      // console.log(ankit);\n      const products = ankit.docs.map((doc) => {\n        const data = doc.data();\n        // to provide key\n        data['id'] = doc.id;\n        return data;\n      })\n      // products array mangwakar this state mein daal diya\n      // console.log(products);\n      this.setState({\n        products,\n        loading: false\n      })\n    })\n  }\n\n  handleIncreaseQuantity = (product) => {\n    // console.log(\"increase the no. of quantity of \",product);\n    const { products } = this.state;\n    const index = products.indexOf(product);\n    // products[index].qty += 1\n    const db = getFirestore();\n    // this.setState({ products: products });\n    // console.log(product.id)\n    const docRef = doc(db, 'products', product.id);\n    console.log(docRef);\n    updateDoc(docRef, {\n      qty: products[index].qty + 1\n    })\n      .then(() => {\n        console.log(\"Entire Document has been updated successfully\");\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n  handleDecreaseQuantity = (product) => {\n    // console.log(\"decrease the no. of quantity of \",product);\n    const { products } = this.state;\n    const index = products.indexOf(product);\n    if (products[index].qty >= 1) {\n      // products[index].qty -= 1 \n      const db = getFirestore();\n      // this.setState({ products: products });\n      // console.log(product.id)\n      const docRef = doc(db, 'products', product.id);\n      console.log(docRef);\n      updateDoc(docRef, {\n        qty: products[index].qty - 1\n      })\n        .then(() => {\n          console.log(\"Entire Document has been updated successfully\");\n        })\n        .catch(error => {\n          console.log(error);\n        })\n    }\n\n    // this.setState({ products: products });\n  }\n  handleDeleteItem = (product) => {\n    // console.log(\"this gonna be print\");\n    // const { products } = this.state;\n    // const index = products.indexOf(product);\n    // products.splice(index, 1);\n    // this.setState({ products: products });\n    const db = getFirestore();\n    const docRef = doc(db, 'products', product.id);\n    deleteDoc(docRef)\n      .then(() => {\n        console.log(\"Entire Document has been deleted successfully.\")\n      })\n      .catch(error => {\n        console.log(error);\n      })\n\n  }\n  getCartCount = () => {\n    const { products } = this.state;\n    let count = 0;\n    products.map((product) => {\n      count += product.qty;\n    })\n    return count;\n  }\n  addproduct = () => {\n    const db = getFirestore();\n    const colref = collection(db, 'products');\n    addDoc(colref, {\n      img: '',\n      price: 99,\n      qty: 3,\n      title: 'washing machine'\n    })\n    console.log('product has been added');\n    // .then((docref)=>{\n    //   console.log('product has been added');\n    // })\n\n  }\n  getCartTotal = () => {\n    const { products } = this.state;\n    let totalprice = 0;\n    products.map((product) => {\n      totalprice += product.price * product.qty;\n    })\n    return totalprice;\n  }\n  render() {\n    const { products, loading } = this.state;\n    return (\n      <div className=\"App\">\n        <Navbar count={this.getCartCount()} />\n        <button onClick={this.addproduct} style={{ padding: 20, fontSize: 25, cursor: 'pointer' }}>Add Product</button>\n        <Cart\n          products={products}\n          OnIncreaseQuantity={this.handleIncreaseQuantity}\n          OnDecreaseQuantity={this.handleDecreaseQuantity}\n          OneDeleteItem={this.handleDeleteItem}\n        />\n        {loading && <h1> The Page is Loading....</h1>}\n        <div style={{ padding: 10, marginLeft: 400, fontSize: 20 }}>\n          TOTAL : {this.getCartTotal()}\n        </div>\n      </div>\n    );\n  }\n\n}\n// const styles={\n//   cartTotal:{\n//     Margin:'100',\n//   }\n// }\nexport default App;\n","/home/ankitpathak/Desktop/ankitCODE/webdev/cart/CartPage/src/Navbar.js",[],[],"/home/ankitpathak/Desktop/ankitCODE/webdev/cart/CartPage/src/Cart.js",[],[],"/home/ankitpathak/Desktop/ankitCODE/webdev/cart/CartPage/src/CartItem.js",["33"],[],"import React from 'react'\n// import index from './index.css'\n\n// no this keyword in function based component only\nconst CartItem = (props) =>{\n    // constructor() {\n    //     super();\n    //     this.state = {\n    //         price: 99,\n    //         title: 'Mobile',\n    //         qty: 1,\n    //         img: ''\n    //     }\n    // }\n    // increaseQuantity=()=>\n    // {\n        // console.log(\"this.state\", this.state);\n        // this.state.qty=this.state.qty+1;\n        // console.log(this.state.qty)\n\n\n\n        // when new state is defined\n        // this.setState({\n        //     qty:this.state.qty+1 \n        // });\n\n\n        // when prevstate is being used to update \n        // this.setState(\n        //     (prevState)=>{\n        //         return{\n        //             qty:prevState.qty+1\n        //         }\n        //     },()=>{console.log(\"this.state\", this.state);}\n        // );\n        //callback func becoz setstate is asnychronous \n    // }\n    // decreaseQuantity=()=>\n    // {\n        // console.log(\"this.state\", this.state);\n        // this.state.qty=this.state.qty+1;\n        // console.log(this.state.qty)\n        // if(this.state.qty-1>=0)\n        // {\n        //     this.setState({\n        //     qty:this.state.qty-1 \n        // });\n        // }\n        \n    // }\n    // render() {\n        const { price, title, qty ,img} = props.product; // object destructuring\n        // console.log('this.props',this.props);\n        return (\n            <div className='cart-item'>\n                <div className='left-block'>\n                    <img style={styles.image} src={img}/>\n                </div>\n                <div className='right-block'>\n\n                    {/* <div style={  {fontSize:25,color:'black'}}> {this.state.title}</div> */}\n                    <div style={{ fontSize: 25, color: 'black' }}>  {title}</div>\n                    <div style={{ fontSize: 20, color: '#555' }}>  Rs {price}</div>\n                    <div style={{ fontSize: 18, color: '#555' }}>  Qty: {qty}</div>\n                    <div className='cart-item-actions'>\n                        <img \n                        alt='Increase' \n                        className='action-icons' \n                        src=\"https://cdn-icons-png.flaticon.com/512/992/992651.png\" \n                        onClick={()=>{props.OnIncreaseQuantity(props.product)}}\n                        />\n                        <img \n                        alt='Decrease' \n                        className='action-icons' \n                        src=\"https://cdn-icons-png.flaticon.com/512/66/66889.png\" \n                        onClick={()=>{props.OnDecreaseQuantity(props.product)}}\n                        />\n                        <img \n                        alt='Delete' \n                        className='action-icons' \n                        src=\"https://cdn-icons-png.flaticon.com/512/3405/3405244.png\" \n                        onClick={()=>{props.OneDeleteItem(props.product)}}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    // }\n}\nconst styles = {\n    image: {\n        height: 150,\n        width: 110,\n        borderRadius: 4,\n        background: '#ccc'\n    }\n}\nexport default CartItem;",{"ruleId":"34","severity":1,"message":"35","line":4,"column":82,"nodeType":"36","messageId":"37","endLine":4,"endColumn":91},{"ruleId":"34","severity":1,"message":"38","line":21,"column":7,"nodeType":"36","messageId":"37","endLine":21,"endColumn":10},{"ruleId":"39","severity":1,"message":"40","line":141,"column":28,"nodeType":"41","messageId":"42","endLine":141,"endColumn":30},{"ruleId":"39","severity":1,"message":"40","line":164,"column":28,"nodeType":"41","messageId":"42","endLine":164,"endColumn":30},{"ruleId":"43","severity":1,"message":"44","line":58,"column":21,"nodeType":"45","endLine":58,"endColumn":58},"no-unused-vars","'Firestore' is defined but never used.","Identifier","unusedVar","'app' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]